@model PFEF.Models.ViewModels.InfoUsuarioViewModel

@{
    ViewBag.Title = "PerfilEdit";
}

<h2>PerfilEdit</h2>

@using (Html.BeginForm("LlenarPerfil", "Usuarios", FormMethod.Post, new { @class = "form-signin", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-horizontal col-md-6">
            <h4>Informacion personal</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Descripcion, new { @class = "col-md-12 control-label" })
                <div class="col-md-12">
                    @Html.TextAreaFor(m => m.Descripcion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.RutaFoto, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBox("file", "", new { type = "file", @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(m => m.RutaFoto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control", @type="date" } })
                    @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <h4>Informacion general</h4>
        <hr />
        <div  class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.InstitucionActualId, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.DropDownListFor(x => x.InstitucionActualId, new SelectList(Model.dropEscuela, "Id", "Nombre"), new { @class = "btn btn-inverse dropdown-toggle", id = "DDEscuelas" })
                        @Html.ValidationMessageFor(model => model.InstitucionActualId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@*<script>

                function caca (){
                    document.getElementById(".tagsinput").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetVisitCustomer", "Usuarios")',
                    datatype: "json",
                    data: {
                        Areas: 'Sales',
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.Name,
                                value: val.Name,
                                customerId: val.ID
                            }
                        }))
                    }
                })
            },
            select: function (event, ui) {
                $("#CustomerID").val(ui.item.customerId);
            }
        });
    };
            </script>*@