@model Teko.ViewModels.SubirViewModel
@{
    ViewBag.Title = "Subir";
}

<div class="container">
    <div class="row">
        <section>
            <div class="wizard">
                <div class="wizard-inner">
                    <div class="connecting-line"></div>
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active">
                            <a href="#step1" data-toggle="tab" aria-controls="step1" role="tab" title="Step 1">
                                <span class="round-tab">
                                    <i class="glyphicon glyphicon-folder-open"></i>
                                </span>
                            </a>
                        </li>
                        <li role="presentation" class="disabled">
                            <a href="#step2" data-toggle="tab" aria-controls="step2" role="tab" title="Step 2">
                                <span class="round-tab">
                                    <i class="glyphicon glyphicon-pencil"></i>
                                </span>
                            </a>
                        </li>
                        <li role="presentation" class="disabled">
                            <a href="#step3" data-toggle="tab" aria-controls="step3" role="tab" title="Step 3">
                                <span class="round-tab">
                                    <i class="glyphicon glyphicon-picture"></i>
                                </span>
                            </a>
                        </li>
                        <li role="presentation" class="disabled">
                            <a href="#complete" data-toggle="tab" aria-controls="complete" role="tab" title="Complete">
                                <span class="round-tab">
                                    <i class="glyphicon glyphicon-ok"></i>
                                </span>
                            </a>
                        </li>
                    </ul>
                </div>
                @using (Html.BeginForm("Subir", "Contenidos", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
                {
                    <div class="tab-content">
                        <div class="tab-pane active" role="tabpanel" id="step1">
                            <h5>Descripcion de su contenido</h5>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Nombre, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Descripcion, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(m => m.Descripcion, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Descripcion, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <ul class="list-inline pull-right">
                                <li><button type="button" class="btn btn-primary next-step">Save and continue</button></li>
                            </ul>
                        </div>
                        <div class="tab-pane" role="tabpanel" id="step2">
                            <h5>Informacion general</h5>
                            <div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Profesor, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(m => m.Profesor, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Cursada, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(m => m.Cursada, new { @class = "form-control", @type = "Number", min = "1900", max = "2017" })
                                        @Html.ValidationMessageFor(m => m.Cursada, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.NivelesEducativosId, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.NivelesEducativosId, new SelectList(Model.dropNivelEducativo, "Id", "Nombre"), "----------", new { @class = "btn btn-inverse dropdown-toggle", @onchange = "PopEsc(this.value);" })
                                        @Html.ValidationMessageFor(m => m.NivelesEducativosId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.EscuelasId, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.EscuelasId, Enumerable.Empty<SelectListItem>(), "Primero elige nivel", new { @class = "btn btn-inverse dropdown-toggle", id = "ddlesc", name = "ddlesc", @onchange = "ActivarNewEsc(this.value);" })                                                                            
                                        @Html.ValidationMessageFor(m => m.EscuelasId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        @Html.TextBoxFor(x => x.NuevaEsc, "Otra escuela", new { @class = "form-control", disabled = "true" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        @Html.DropDownListFor(x => x.NivNuevaEsc, new SelectList(Model.dropNivelEducativo, "Id", "Nombre"), new { @class = "btn btn-inverse dropdown-toggle", disabled = "true" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.MateriasId, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(x => x.MateriasId, new SelectList(Model.dropMateria, "Id", "Nombre"), new { @class = "btn btn-inverse dropdown-toggle" })
                                        @Html.ValidationMessageFor(m => m.MateriasId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.TiposContenidosId, new { @class = "col-md-2 control-label", value ="Tipos de contenido" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(x => x.TiposContenidosId, new SelectList(Model.dropTipoContenido, "Id", "Nombre"), new { @class = "btn btn-inverse dropdown-toggle" })
                                        @Html.ValidationMessageFor(m => m.TiposContenidosId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <ul class="list-inline pull-right">
                                    <li><button type="button" class="btn btn-default prev-step">Previous</button></li>
                                    <li><button type="button" class="btn btn-primary next-step">Save and continue</button></li>
                                </ul>
                            </div>
                            </div>
                        <div class="tab-pane" role="tabpanel" id="step3">
                            <h3>Contenido</h3>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Ruta, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(x => x.Files, new { type = "file", @class = "form-control", @required = "required", multiple = "true" })
                                        @Html.ValidationMessageFor(m => m.Ruta, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <ul class="list-inline pull-right">
                                <li><button type="button" class="btn btn-default prev-step">Previous</button></li>
                                <li><button type="button" class="btn btn-primary btn-info-full next-step">Save and continue</button></li>
                            </ul>
                        </div>
                        <div class="tab-pane" role="tabpanel" id="complete">
                            <h3>Complete</h3>
                            <p>You have successfully completed all steps.</p>
                            <button type="submit" class="btn btn-primary btn-info-full next-step">Subir</button>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                }
            </div>
        </section>
    </div>
</div>
<style>
    .form-group{
        height: 40px;
    }
    .wizard {
        margin: 20px auto;
        background: #fff;
    }

        .wizard .nav-tabs {
            position: relative;
            margin: 40px auto;
            margin-bottom: 0;
            border-bottom-color: #e0e0e0;
        }

        .wizard > div.wizard-inner {
            position: relative;
        }

    .connecting-line {
        height: 2px;
        background: #e0e0e0;
        position: absolute;
        width: 80%;
        margin: 0 auto;
        left: 0;
        right: 0;
        top: 50%;
        z-index: 1;
    }

    .wizard .nav-tabs > li.active > a, .wizard .nav-tabs > li.active > a:hover, .wizard .nav-tabs > li.active > a:focus {
        color: #555555;
        cursor: default;
        border: 0;
        border-bottom-color: transparent;
    }

    span.round-tab {
        width: 70px;
        height: 70px;
        line-height: 70px;
        display: inline-block;
        border-radius: 100px;
        background: #fff;
        border: 2px solid #e0e0e0;
        z-index: 2;
        position: absolute;
        left: 0;
        text-align: center;
        font-size: 25px;
    }

        span.round-tab i {
            color: #555555;
        }

    .wizard li.active span.round-tab {
        background: #fff;
        border: 2px solid #5bc0de;
    }

        .wizard li.active span.round-tab i {
            color: #5bc0de;
        }

    span.round-tab:hover {
        color: #333;
        border: 2px solid #333;
    }

    .wizard .nav-tabs > li {
        width: 25%;
    }

    .wizard li:after {
        content: " ";
        position: absolute;
        left: 46%;
        opacity: 0;
        margin: 0 auto;
        bottom: 0px;
        border: 5px solid transparent;
        border-bottom-color: #5bc0de;
        transition: 0.1s ease-in-out;
    }

    .wizard li.active:after {
        content: " ";
        position: absolute;
        left: 46%;
        opacity: 1;
        margin: 0 auto;
        bottom: 0px;
        border: 10px solid transparent;
        border-bottom-color: #5bc0de;
    }

    .wizard .nav-tabs > li a {
        width: 70px;
        height: 70px;
        margin: 20px auto;
        border-radius: 100%;
        padding: 0;
    }

        .wizard .nav-tabs > li a:hover {
            background: transparent;
        }

    .wizard .tab-pane {
        position: relative;
        padding-top: 50px;
    }

    .wizard h3 {
        margin-top: 0;
    }

    @@media(max - width : 585px) {

        .wizard {
            width: 90%;
            height: auto !important;
        }

        span.round-tab {
            font-size: 16px;
            width: 50px;
            height: 50px;
            line-height: 50px;
        }

        .wizard .nav-tabs > li a {
            width: 50px;
            height: 50px;
            line-height: 50px;
        }

        .wizard li.active:after {
            content: " ";
            position: absolute;
            left: 35%;
        }
    }
</style>
<script>
    $(document).ready(function () {
        //Initialize tooltips
        $('.nav-tabs > li a[title]').tooltip();

        //Wizard
        $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {

            var $target = $(e.target);

            if ($target.parent().hasClass('disabled')) {
                return false;
            }
        });

        $(".next-step").click(function (e) {

            var $active = $('.wizard .nav-tabs li.active');
            $active.next().removeClass('disabled');
            nextTab($active);

        });
        $(".prev-step").click(function (e) {

            var $active = $('.wizard .nav-tabs li.active');
            prevTab($active);

        });
    });

    function nextTab(elem) {
        $(elem).next().find('a[data-toggle="tab"]').click();
    }
    function prevTab(elem) {
        $(elem).prev().find('a[data-toggle="tab"]').click();
    }
                function PopEsc() {
                    var lvlId = $('#NivelesEducativosId').val();
                    $.ajax({
                        url: '/Contenidos/PopuladorEsc',
                        type: "GET",
                        dataType: "JSON",
                        data: { Lvl: lvlId },
                        success: function (Data) {
                            $("#ddlesc").html(""); // clear before appending new list
                            $.each(Data, function (i, city) {
                                $("#ddlesc").append(
                                    $('<option></option>').val(city.Id).html(city.Nombre));
                            });
                        }
                    });
                }
                function ActivarNewEsc() {
                    var val = $('#ddlesc').val();
                    if (val == "0") {
                        document.getElementById('NuevaEsc').disabled = false;
                        document.getElementById('NivNuevaEsc').disabled = false;
                        document.getElementById('NivelesEducativosId').disabled = true;
                    } else {
                        document.getElementById('NuevaEsc').disabled = true;
                        document.getElementById('NuevaEsc').value = "Otra escuela";
                        document.getElementById('NivNuevaEsc').disabled = true;
                        document.getElementById('NivelesEducativosId').disabled = false;
                    }
                }
</script>